#!/usr/bin/env bash
# thanks RVM project for its so inspirationnal collection of bash scripts


if [[ "$*" =~ --trace ]]
  then
  set -x
  set -o xtrace
  export PS4="+ \${BASH_SOURCE} : \${FUNCNAME[0]:+\${FUNCNAME[0]}()}  \${LINENO} > "
fi

typeset DEV
VERSION=0.1
CURDIR=$(pwd)
set -o errtrace
shopt -s extglob

DESTDIR="./logring"

show_version() {
  echo "Logring installer v${VERSION} - https://github.com/eduvo/logring"
}

base_install() {
  echo "Installing Logring in ${DESTDIR} ..."
  mkdir "${DESTDIR}" 2> /dev/null
  cd "${DESTDIR}"
  echo "source 'https://rubygems.org'" > Gemfile
  if [[ ${DEV:-0} == 0 ]]
    then
    echo "gem 'logring'" >> Gemfile
  else
    echo "gem 'logring', path: '${CURDIR}'" >> Gemfile
  fi
  bundle install
  if [[ $? == 0 ]]
    then
    echo "... all installed."
  else
    echo "Oops."
  fi
}

slave_install() {
  echo "Installing Logring in ${DESTDIR} ..."
  mkdir "${DESTDIR}" 2> /dev/null
  cd "${DESTDIR}"
  mkdir "log" 2> /dev/null
  mkdir "cache" 2> /dev/null
  echo "source 'https://rubygems.org'" > Gemfile
  echo "gem 'request-log-analyzer'" >> Gemfile
  echo "bundling ${?}"
  which ruby
  if [[ $? != 0 ]]
    echo "Ruby cannot be found."
    exit 1
  fi
  bundle install
  echo "bundled ${?}"
  if [[ $? == 0 ]]
    then
    echo "... all installed."
  else
    echo "Oops."
  fi
}

install_usage() {
  printf "%b" "
  Usage:
    ${0} [options]

  Options:
    --dest    where to install logring config and files (default to ./logring)
    --dev     will use local dir as gem for development purpose
    --trace   debug view
    --help    this help text

"
}

parse_args() {
  while (( $# > 0 ))
  do
    token="$1"
    shift
    case "$token" in
      (--dest=*)
        dir="${token#*=}"
        if [[ -d "${dir}" ]]
          then
          if [[ ! -w "${dir}" ]]
            then
            echo "Destination dir '${dir}' is not writable."
            exit 1
          fi
        else
          dirdir=$(dirname $dir)
          if [[ ! -w "${dirdir}" ]]
            then
            echo "Dir '${dirdir}' is not writable."
            exit 1
          fi
        fi
        DESTDIR="${dir}"
        ;;
      (--dev)
          DEV=1
        ;;
      (--version)
        show_version
        exit 0
        ;;
      (--slave)
        slave_install
        exit 0
        ;;
      (--help)
        install_usage
        exit 0
        ;;
    esac
  done
}

parse_args "$@"
base_install

exit 0
